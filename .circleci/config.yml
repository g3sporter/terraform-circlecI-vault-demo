version: 2
jobs:
  Preparing_Terraform_enterprise_Environment:
    docker: 
      - image: debian/jessie:latest
        environment:
            TF_VERSION: "0.11.14"
            TF_PREFIX: "test-remote-backend-"
            TF_HOSTNAME: "https://app.terraform.io/api/v2"
            TF_ORGANIZATION: "Hashicorp-neh-Demo"
            TF_ENV: "dev prod"
    steps: 
      - run: 
          name: Creating Terraform Enterprise Workspace 
          command: |
            apt-get install -y jq git curl 
            for env in $TF_ENV; do
              tee payload_ws.json <<EOF
                {
                  "data": {
                    "attributes": {
                      "name": "$TF_PREFIX$env",
                      "terraform_version": "$TF_VERSION"
                    },
                    "type": "workspaces"
                  }
                }
              EOF
              TF_WORKSPACE_ID="$(curl -v -H "Authorization: Bearer ${tfe_token}" -H "Content-Type: application/vnd.api+json" -d "@./payload_ws.json" "${TF_HOSTNAME}/organizations/${TF_ORGANIZATION}/workspaces" | jq -r '.data.id')"
              echo "$TF_WORKSPACE_ID" >> $BASH_ENV
              done
              cat 
  Dev-Terraform-Provisioning:
    docker:
      - image: hashicorp/terraform:0.11.14
        environment:
            TF_WORKSPACE: "dev"
    steps: 
      - checkout
      - run:
          name: Adding Variables to Terraform Workspace
          command: |
            TF_WORKSPACE_ID=$(cat $BASH_ENV)
            tee payload_vars.json <<EOF
              {
                "data": {
                  "type":"vars",
                  "attributes": {
                    "key":"env",
                    "value":"dev",
                    "category":"terraform",
                    "hcl":false,
                    "sensitive":false
                  },
                  "relationships": {
                    "workspace": {
                      "data": {
                        "id":"${TF_WORKSPACE_ID}",
                        "type":"workspaces"
                      }
                    }
                  }
                }
              }
            EOF
            curl -v -H "Authorization: Bearer ${tfe_token}" -H "Content-Type: application/vnd.api+json" -d "@./payload_vars.json" "${TF_HOSTNAME}/vars"  
      - run:
          name: Terraform Initialization
          command: terraform init -input=false -backend-config="token=$tfe_token"
      - run:
          name: Validate Terraform Code
          command: terraform validate
      - run:
          name: Terraform Plan
          command: |
              terraform plan -input=false
      - run:
          name: Terraform Apply
          command: terraform apply -input=false -auto-approve
  Prod-Terraform-Provisioning:
    docker:
      - image: hashicorp/terraform:0.11.14
        environment:
          TF_WORKSPACE: "prod"
    steps: 
      - checkout
      - run:
          name: Terraform Initialization
          command: terraform init -input=false -backend-config="token=$tfe_token"
      - run:
          name: Validate Terraform Code
          command: terraform validate
      - run:
          name: Terraform Plan
          command: |
            terraform plan -input=false
      - run:
          name: Terraform Apply
          command: terraform apply -input=false -auto-approve
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - Preparing_Terraform_enterprise_Environment
      - Approve-Prep-To-Dev:
          type: approval
          requires: 
            - Preparing_Terraform_enterprise_Environment
      - Dev-Terraform-Provisioning:
          requires:
            - Approve-Prep-To-Dev
      - Approve-Dev-To-Prod:
          type: approval
          requires: 
            - Dev-Terraform-Provisioning
      - Prod-Terraform-Provisioning:
          requires: 
            - Approve-Dev-To-Prod

     