version: 2
jobs:
  Requesting_Azure_credentials_From_vault:
    docker:
      - image: vault:1.1.2
        environment:
          VAULT_ADDR: http://82.64.24.225:8200
    steps:
      - run:
          name: Login to Vault and register token 
          command: |
            apk add jq curl
            tee payload.json <<EOF
            {
              "project": "$CIRCLE_PROJECT_REPONAME",
              "vcs_revision": "$CIRCLE_SHA1",
              "build_num": "$CIRCLE_BUILD_NUM"
            }
            EOF
            export VAULT_TOKEN="$(curl -v -d "@./payload.json" "${VAULT_ADDR}/v1/auth/vault-circleci-auth-plugin/login" | jq -r '.auth.client_token')"
            mkdir azurecreds
            vault read -format=json azure_demo/creds/circle-tfe-contrib | jq -r '.data[]' >> ./azurecreds/creds.txt
  Preparing_Terraform_enterprise_Environment:
    docker: 
      - image: debian:jessie
        environment:
            TF_VERSION: "0.11.14"
            TF_PREFIX: "remote-backend-"
            TF_HOSTNAME: "https://app.terraform.io/api/v2"
            TF_ORGANIZATION: "Hashicorp-neh-Demo"
            TF_ENV: "dev prod"
    steps: 
      - run: 
          name: Creating Terraform Enterprise Workspace 
          command: |
            apt-get update
            apt-get install -y jq git curl 
            for env in ${TF_ENV[@]}
            do
            tee payload_ws.json <<EOF
              {
                "data": {
                  "attributes": {
                    "name": "$TF_PREFIX$env",
                    "terraform_version": "$TF_VERSION"
                  },
                  "type": "workspaces"
                }
              }
            EOF
            TF_WORKSPACE_ID="$(curl -v -H "Authorization: Bearer ${tfe_token}" -H "Content-Type: application/vnd.api+json" -d "@./payload_ws.json" "${TF_HOSTNAME}/organizations/${TF_ORGANIZATION}/workspaces" | jq -r '.data.id')"
            tee payload_vars.json <<EOF
              {
                "data": {
                  "type":"vars",
                  "attributes": {
                    "key":"env",
                    "value":"$env",
                    "category":"terraform",
                    "hcl":false,
                    "sensitive":false
                  },
                  "relationships": {
                    "workspace": {
                      "data": {
                        "id":"${TF_WORKSPACE_ID}",
                        "type":"workspaces"
                      }
                    }
                  }
                },
                "data": {
                  "type":"vars",
                  "attributes": {
                    "key":"ARM",
                    "value":"toto",
                    "category":"env",
                    "hcl":false,
                    "sensitive":false
                  },
                  "relationships": {
                    "workspace": {
                      "data": {
                        "id":"${TF_WORKSPACE_ID}",
                        "type":"workspaces"
                      }
                    }
                  }
                },
                                "data": {
                  "type":"vars",
                  "attributes": {
                    "key":"env",
                    "value":"tata",
                    "category":"env",
                    "hcl":false,
                    "sensitive":false
                  },
                  "relationships": {
                    "workspace": {
                      "data": {
                        "id":"${TF_WORKSPACE_ID}",
                        "type":"workspaces"
                      }
                    }
                  }
                },
                "data": {
                  "type":"vars",
                  "attributes": {
                    "key":"env",
                    "value":"titi",
                    "category":"env",
                    "hcl":false,
                    "sensitive":false
                  },
                  "relationships": {
                    "workspace": {
                      "data": {
                        "id":"${TF_WORKSPACE_ID}",
                        "type":"workspaces"
                      }
                    }
                  }
                },
                "data": {
                  "type":"vars",
                  "attributes": {
                    "key":"env",
                    "value":"tutu",
                    "category":"env",
                    "hcl":false,
                    "sensitive":false
                  },
                  "relationships": {
                    "workspace": {
                      "data": {
                        "id":"${TF_WORKSPACE_ID}",
                        "type":"workspaces"
                      }
                    }
                  }
                },
              }
            EOF
            curl -v -H "Authorization: Bearer ${tfe_token}" -H "Content-Type: application/vnd.api+json" -d "@./payload_vars.json" "${TF_HOSTNAME}/vars" 
            done 
Dev-Terraform-Provisioning:
    docker:
      - image: hashicorp/terraform:0.11.14
        environment:
            TF_WORKSPACE: "dev"
    steps: 
      - checkout
      - run:
          name: Terraform Initialization
          command: terraform init -input=false -backend-config="token=$tfe_token"
      - run:
          name: Validate Terraform Code
          command: terraform validate
      - run:
          name: Terraform Plan
          command: |
              terraform plan -input=false
      - run:
          name: Terraform Apply
          command: terraform apply -input=false -auto-approve
Prod-Terraform-Provisioning:
    docker:
      - image: hashicorp/terraform:0.11.14
        environment:
          TF_WORKSPACE: "prod"
          ARM_CLIENT_ID: "$client_id"
          ARM_CLIENT_SECRET: "$client_secret"
          ARM_SUBSCRIPTION_ID: "$subscription_id"
          ARM_TENANT_ID: "$tenant_id"
    steps: 
      - checkout
      - run:
          name: Terraform Initialization
          command: terraform init -input=false -backend-config="token=$tfe_token"
      - run:
          name: Validate Terraform Code
          command: terraform validate
      - run:
          name: Terraform Plan
          command: |
            terraform plan -input=false
      - run:
          name: Terraform Apply
          command: terraform apply -input=false -auto-approve
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - Requesting_Azure_credentials_From_vault
      - Preparing_Terraform_enterprise_Environment:
          requires:
            - Requesting_Azure_credentials_From_vault
      - Approve-Vault-To-Dev:
          type: approval
          requires: 
            - Preparing_Terraform_enterprise_Environment
      - Dev-Terraform-Provisioning:
          requires:
            - Approve-Vault-To-Dev
      - Approve-Dev-To-Prod:
          type: approval
          requires: 
            - Dev-Terraform-Provisioning
      - Prod-Terraform-Provisioning:
          requires: 
            - Approve-Dev-To-Prod

     